Archive member included to satisfy reference by file (symbol)

/usr/lib/gcc/avr/8.2.0/avr5/libgcc.a(_exit.o)
                              /usr/lib/gcc/avr/8.2.0/../../../../avr/lib/avr5/crtatmega16.o (exit)
/usr/lib/gcc/avr/8.2.0/avr5/libgcc.a(_copy_data.o)
                              ./logicAnalyzer.o (__do_copy_data)
/usr/lib/gcc/avr/8.2.0/avr5/libgcc.a(_clear_bss.o)
                              ./logicAnalyzer.o (__do_clear_bss)
/usr/lib/gcc/avr/8.2.0/avr5/libgcc.a(_bswapsi2.o)
                              ./logicAnalyzer.o (__bswapsi2)

Memory Configuration

Name             Origin             Length             Attributes
text             0x0000000000000000 0x0000000000020000 xr
data             0x0000000000800060 0x000000000000ffa0 rw !x
eeprom           0x0000000000810000 0x0000000000010000 rw !x
fuse             0x0000000000820000 0x0000000000000400 rw !x
lock             0x0000000000830000 0x0000000000000400 rw !x
signature        0x0000000000840000 0x0000000000000400 rw !x
user_signatures  0x0000000000850000 0x0000000000000400 rw !x
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

LOAD /usr/lib/gcc/avr/8.2.0/../../../../avr/lib/avr5/crtatmega16.o
LOAD ./logicAnalyzer.o
LOAD ./main.o
LOAD ./uart_atmega16.o
START GROUP
LOAD /usr/lib/gcc/avr/8.2.0/avr5/libgcc.a
LOAD /usr/lib/gcc/avr/8.2.0/../../../../avr/lib/avr5/libm.a
LOAD /usr/lib/gcc/avr/8.2.0/../../../../avr/lib/avr5/libc.a
LOAD /usr/lib/gcc/avr/8.2.0/../../../../avr/lib/avr5/libatmega16.a
END GROUP
                0x0000000000020000                __TEXT_REGION_LENGTH__ = DEFINED (__TEXT_REGION_LENGTH__)?__TEXT_REGION_LENGTH__:0x20000
                0x000000000000ffa0                __DATA_REGION_LENGTH__ = DEFINED (__DATA_REGION_LENGTH__)?__DATA_REGION_LENGTH__:0xffa0
                0x0000000000010000                __EEPROM_REGION_LENGTH__ = DEFINED (__EEPROM_REGION_LENGTH__)?__EEPROM_REGION_LENGTH__:0x10000
                0x0000000000000400                __FUSE_REGION_LENGTH__ = DEFINED (__FUSE_REGION_LENGTH__)?__FUSE_REGION_LENGTH__:0x400
                0x0000000000000400                __LOCK_REGION_LENGTH__ = DEFINED (__LOCK_REGION_LENGTH__)?__LOCK_REGION_LENGTH__:0x400
                0x0000000000000400                __SIGNATURE_REGION_LENGTH__ = DEFINED (__SIGNATURE_REGION_LENGTH__)?__SIGNATURE_REGION_LENGTH__:0x400
                0x0000000000000400                __USER_SIGNATURE_REGION_LENGTH__ = DEFINED (__USER_SIGNATURE_REGION_LENGTH__)?__USER_SIGNATURE_REGION_LENGTH__:0x400

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x0000000000000000      0x3ee
 *(.vectors)
 .vectors       0x0000000000000000       0x54 /usr/lib/gcc/avr/8.2.0/../../../../avr/lib/avr5/crtatmega16.o
                0x0000000000000000                __vectors
                0x0000000000000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
                0x0000000000000054                . = ALIGN (0x2)
                0x0000000000000054                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x0000000000000054        0x0 linker stubs
 *(.trampolines*)
                0x0000000000000054                __trampolines_end = .
 *libprintf_flt.a:*(.progmem.data)
 *libc.a:*(.progmem.data)
 *(.progmem.*)
                0x0000000000000054                . = ALIGN (0x2)
 *(.lowtext)
 *(.lowtext*)
                0x0000000000000054                __ctors_start = .
 *(.ctors)
                0x0000000000000054                __ctors_end = .
                0x0000000000000054                __dtors_start = .
 *(.dtors)
                0x0000000000000054                __dtors_end = .
 SORT_BY_NAME(*)(.ctors)
 SORT_BY_NAME(*)(.dtors)
 *(.init0)
 .init0         0x0000000000000054        0x0 /usr/lib/gcc/avr/8.2.0/../../../../avr/lib/avr5/crtatmega16.o
                0x0000000000000054                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x0000000000000054        0xc /usr/lib/gcc/avr/8.2.0/../../../../avr/lib/avr5/crtatmega16.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x0000000000000060       0x16 /usr/lib/gcc/avr/8.2.0/avr5/libgcc.a(_copy_data.o)
                0x0000000000000060                __do_copy_data
 .init4         0x0000000000000076       0x10 /usr/lib/gcc/avr/8.2.0/avr5/libgcc.a(_clear_bss.o)
                0x0000000000000076                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x0000000000000086        0x8 /usr/lib/gcc/avr/8.2.0/../../../../avr/lib/avr5/crtatmega16.o
 *(.init9)
 *(.text)
 .text          0x000000000000008e        0x4 /usr/lib/gcc/avr/8.2.0/../../../../avr/lib/avr5/crtatmega16.o
                0x000000000000008e                __vector_1
                0x000000000000008e                __vector_12
                0x000000000000008e                __bad_interrupt
                0x000000000000008e                __vector_6
                0x000000000000008e                __vector_3
                0x000000000000008e                __vector_17
                0x000000000000008e                __vector_19
                0x000000000000008e                __vector_7
                0x000000000000008e                __vector_5
                0x000000000000008e                __vector_4
                0x000000000000008e                __vector_9
                0x000000000000008e                __vector_2
                0x000000000000008e                __vector_15
                0x000000000000008e                __vector_14
                0x000000000000008e                __vector_10
                0x000000000000008e                __vector_16
                0x000000000000008e                __vector_18
                0x000000000000008e                __vector_20
 .text          0x0000000000000092        0x0 ./logicAnalyzer.o
 .text          0x0000000000000092        0x0 ./main.o
 .text          0x0000000000000092        0x0 ./uart_atmega16.o
 .text          0x0000000000000092        0x0 /usr/lib/gcc/avr/8.2.0/avr5/libgcc.a(_exit.o)
 .text          0x0000000000000092        0x0 /usr/lib/gcc/avr/8.2.0/avr5/libgcc.a(_copy_data.o)
 .text          0x0000000000000092        0x0 /usr/lib/gcc/avr/8.2.0/avr5/libgcc.a(_clear_bss.o)
 .text          0x0000000000000092        0x0 /usr/lib/gcc/avr/8.2.0/avr5/libgcc.a(_bswapsi2.o)
                0x0000000000000092                . = ALIGN (0x2)
 *(.text.*)
 .text.TIMER1_init
                0x0000000000000092       0x24 ./logicAnalyzer.o
                0x0000000000000092                TIMER1_init
 .text.__vector_8
                0x00000000000000b6       0x46 ./logicAnalyzer.o
                0x00000000000000b6                __vector_8
 .text.LOGIC_Init
                0x00000000000000fc       0x3e ./logicAnalyzer.o
                0x00000000000000fc                LOGIC_Init
 .text.LOGIC_MainFunction
                0x000000000000013a      0x132 ./logicAnalyzer.o
                0x000000000000013a                LOGIC_MainFunction
 .text.startup.main
                0x000000000000026c        0xa ./main.o
                0x000000000000026c                main
 .text.__vector_11
                0x0000000000000276       0x72 ./uart_atmega16.o
                0x0000000000000276                __vector_11
 .text.__vector_13
                0x00000000000002e8       0x66 ./uart_atmega16.o
                0x00000000000002e8                __vector_13
 .text.UART_Init
                0x000000000000034e       0x18 ./uart_atmega16.o
                0x000000000000034e                UART_Init
 .text.UART_SendPayload
                0x0000000000000366       0x24 ./uart_atmega16.o
                0x0000000000000366                UART_SendPayload
 .text.UART_ReceivePayload
                0x000000000000038a       0x1a ./uart_atmega16.o
                0x000000000000038a                UART_ReceivePayload
 .text.UART_IsTxComplete
                0x00000000000003a4       0x1c ./uart_atmega16.o
                0x00000000000003a4                UART_IsTxComplete
 .text.UART_IsRxComplete
                0x00000000000003c0       0x1c ./uart_atmega16.o
                0x00000000000003c0                UART_IsRxComplete
 .text.libgcc.mul
                0x00000000000003dc        0x0 /usr/lib/gcc/avr/8.2.0/avr5/libgcc.a(_exit.o)
 .text.libgcc.div
                0x00000000000003dc        0x0 /usr/lib/gcc/avr/8.2.0/avr5/libgcc.a(_exit.o)
 .text.libgcc   0x00000000000003dc        0x0 /usr/lib/gcc/avr/8.2.0/avr5/libgcc.a(_exit.o)
 .text.libgcc.prologue
                0x00000000000003dc        0x0 /usr/lib/gcc/avr/8.2.0/avr5/libgcc.a(_exit.o)
 .text.libgcc.builtins
                0x00000000000003dc        0x0 /usr/lib/gcc/avr/8.2.0/avr5/libgcc.a(_exit.o)
 .text.libgcc.fmul
                0x00000000000003dc        0x0 /usr/lib/gcc/avr/8.2.0/avr5/libgcc.a(_exit.o)
 .text.libgcc.fixed
                0x00000000000003dc        0x0 /usr/lib/gcc/avr/8.2.0/avr5/libgcc.a(_exit.o)
 .text.libgcc.mul
                0x00000000000003dc        0x0 /usr/lib/gcc/avr/8.2.0/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.div
                0x00000000000003dc        0x0 /usr/lib/gcc/avr/8.2.0/avr5/libgcc.a(_copy_data.o)
 .text.libgcc   0x00000000000003dc        0x0 /usr/lib/gcc/avr/8.2.0/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.prologue
                0x00000000000003dc        0x0 /usr/lib/gcc/avr/8.2.0/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.builtins
                0x00000000000003dc        0x0 /usr/lib/gcc/avr/8.2.0/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.fmul
                0x00000000000003dc        0x0 /usr/lib/gcc/avr/8.2.0/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.fixed
                0x00000000000003dc        0x0 /usr/lib/gcc/avr/8.2.0/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.mul
                0x00000000000003dc        0x0 /usr/lib/gcc/avr/8.2.0/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.div
                0x00000000000003dc        0x0 /usr/lib/gcc/avr/8.2.0/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc   0x00000000000003dc        0x0 /usr/lib/gcc/avr/8.2.0/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.prologue
                0x00000000000003dc        0x0 /usr/lib/gcc/avr/8.2.0/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.builtins
                0x00000000000003dc        0x0 /usr/lib/gcc/avr/8.2.0/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.fmul
                0x00000000000003dc        0x0 /usr/lib/gcc/avr/8.2.0/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.fixed
                0x00000000000003dc        0x0 /usr/lib/gcc/avr/8.2.0/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.mul
                0x00000000000003dc        0x0 /usr/lib/gcc/avr/8.2.0/avr5/libgcc.a(_bswapsi2.o)
 .text.libgcc.div
                0x00000000000003dc        0x0 /usr/lib/gcc/avr/8.2.0/avr5/libgcc.a(_bswapsi2.o)
 .text.libgcc   0x00000000000003dc        0x0 /usr/lib/gcc/avr/8.2.0/avr5/libgcc.a(_bswapsi2.o)
 .text.libgcc.prologue
                0x00000000000003dc        0x0 /usr/lib/gcc/avr/8.2.0/avr5/libgcc.a(_bswapsi2.o)
 .text.libgcc.builtins
                0x00000000000003dc        0xe /usr/lib/gcc/avr/8.2.0/avr5/libgcc.a(_bswapsi2.o)
                0x00000000000003dc                __bswapsi2
 .text.libgcc.fmul
                0x00000000000003ea        0x0 /usr/lib/gcc/avr/8.2.0/avr5/libgcc.a(_bswapsi2.o)
 .text.libgcc.fixed
                0x00000000000003ea        0x0 /usr/lib/gcc/avr/8.2.0/avr5/libgcc.a(_bswapsi2.o)
                0x00000000000003ea                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x00000000000003ea        0x0 /usr/lib/gcc/avr/8.2.0/avr5/libgcc.a(_exit.o)
                0x00000000000003ea                exit
                0x00000000000003ea                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x00000000000003ea        0x4 /usr/lib/gcc/avr/8.2.0/avr5/libgcc.a(_exit.o)
 *(.fini0)
 *(.hightext)
 *(.hightext*)
 *(.progmemx.*)
                0x00000000000003ee                . = ALIGN (0x2)
 *(.jumptables)
 *(.jumptables*)
                0x00000000000003ee                _etext = .

.data           0x0000000000800060        0x2 load address 0x00000000000003ee
                0x0000000000800060                PROVIDE (__data_start = .)
 *(.data)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/8.2.0/../../../../avr/lib/avr5/crtatmega16.o
 .data          0x0000000000800060        0x0 ./logicAnalyzer.o
 .data          0x0000000000800060        0x0 ./main.o
 .data          0x0000000000800060        0x0 ./uart_atmega16.o
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/8.2.0/avr5/libgcc.a(_exit.o)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/8.2.0/avr5/libgcc.a(_copy_data.o)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/8.2.0/avr5/libgcc.a(_clear_bss.o)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/8.2.0/avr5/libgcc.a(_bswapsi2.o)
 *(.data*)
 .data._go_signal_buf.1884
                0x0000000000800060        0x1 ./logicAnalyzer.o
 .data.currentState
                0x0000000000800061        0x1 ./logicAnalyzer.o
 *(.gnu.linkonce.d*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.r*)
                0x0000000000800062                . = ALIGN (0x2)
                0x0000000000800062                _edata = .
                0x0000000000800062                PROVIDE (__data_end = .)

.bss            0x0000000000800062      0x3cf
                0x0000000000800062                PROVIDE (__bss_start = .)
 *(.bss)
 .bss           0x0000000000800062        0x0 /usr/lib/gcc/avr/8.2.0/../../../../avr/lib/avr5/crtatmega16.o
 .bss           0x0000000000800062        0x0 ./logicAnalyzer.o
 .bss           0x0000000000800062        0x0 ./main.o
 .bss           0x0000000000800062        0x0 ./uart_atmega16.o
 .bss           0x0000000000800062        0x0 /usr/lib/gcc/avr/8.2.0/avr5/libgcc.a(_exit.o)
 .bss           0x0000000000800062        0x0 /usr/lib/gcc/avr/8.2.0/avr5/libgcc.a(_copy_data.o)
 .bss           0x0000000000800062        0x0 /usr/lib/gcc/avr/8.2.0/avr5/libgcc.a(_clear_bss.o)
 .bss           0x0000000000800062        0x0 /usr/lib/gcc/avr/8.2.0/avr5/libgcc.a(_bswapsi2.o)
 *(.bss*)
 .bss._sample_buf.1889
                0x0000000000800062        0x7 ./logicAnalyzer.o
 .bss.samples_cnt.1883
                0x0000000000800069        0x1 ./logicAnalyzer.o
 .bss.tot_overflow
                0x000000000080006a        0x4 ./logicAnalyzer.o
 .bss.time_snap
                0x000000000080006e      0x2f8 ./logicAnalyzer.o
 .bss.pin_states
                0x0000000000800366       0xbe ./logicAnalyzer.o
 .bss.logic_port_state
                0x0000000000800424        0x1 ./logicAnalyzer.o
 .bss.rx_cnt    0x0000000000800425        0x2 ./uart_atmega16.o
 .bss.rx_len    0x0000000000800427        0x2 ./uart_atmega16.o
 .bss.rx_buffer
                0x0000000000800429        0x2 ./uart_atmega16.o
 .bss.tx_cnt    0x000000000080042b        0x2 ./uart_atmega16.o
 .bss.tx_len    0x000000000080042d        0x2 ./uart_atmega16.o
 .bss.tx_buffer
                0x000000000080042f        0x2 ./uart_atmega16.o
 *(COMMON)
                0x0000000000800431                PROVIDE (__bss_end = .)
                0x00000000000003ee                __data_load_start = LOADADDR (.data)
                0x00000000000003f0                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x0000000000800431        0x0
                [!provide]                        PROVIDE (__noinit_start = .)
 *(.noinit*)
                [!provide]                        PROVIDE (__noinit_end = .)
                0x0000000000800431                _end = .
                [!provide]                        PROVIDE (__heap_start = .)

.eeprom         0x0000000000810000        0x0
 *(.eeprom*)
                0x0000000000810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab
 *(.stab)

.stabstr
 *(.stabstr)

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x0000000000000000       0x11
 *(.comment)
 .comment       0x0000000000000000       0x11 ./logicAnalyzer.o
                                         0x12 (size before relaxing)
 .comment       0x0000000000000011       0x12 ./main.o
 .comment       0x0000000000000011       0x12 ./uart_atmega16.o

.note.gnu.avr.deviceinfo
                0x0000000000000000       0x3c
 .note.gnu.avr.deviceinfo
                0x0000000000000000       0x3c /usr/lib/gcc/avr/8.2.0/../../../../avr/lib/avr5/crtatmega16.o

.note.gnu.build-id
 *(.note.gnu.build-id)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info     0x0000000000000000      0x52e
 *(.debug_info .gnu.linkonce.wi.*)
 .debug_info    0x0000000000000000      0x52e /usr/lib/gcc/avr/8.2.0/../../../../avr/lib/avr5/crtatmega16.o

.debug_abbrev   0x0000000000000000      0x4e7
 *(.debug_abbrev)
 .debug_abbrev  0x0000000000000000      0x4e7 /usr/lib/gcc/avr/8.2.0/../../../../avr/lib/avr5/crtatmega16.o

.debug_line     0x0000000000000000       0x1d
 *(.debug_line .debug_line.* .debug_line_end)
 .debug_line    0x0000000000000000       0x1d /usr/lib/gcc/avr/8.2.0/../../../../avr/lib/avr5/crtatmega16.o

.debug_frame
 *(.debug_frame)

.debug_str      0x0000000000000000      0x1af
 *(.debug_str)
 .debug_str     0x0000000000000000      0x1af /usr/lib/gcc/avr/8.2.0/../../../../avr/lib/avr5/crtatmega16.o

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)

.debug_weaknames
 *(.debug_weaknames)

.debug_funcnames
 *(.debug_funcnames)

.debug_typenames
 *(.debug_typenames)

.debug_varnames
 *(.debug_varnames)

.debug_pubtypes
 *(.debug_pubtypes)

.debug_ranges
 *(.debug_ranges)

.debug_macro
 *(.debug_macro)

.debug_addr
 *(.debug_addr)
OUTPUT(logic_analyizer.elf elf32-avr)
LOAD linker stubs
